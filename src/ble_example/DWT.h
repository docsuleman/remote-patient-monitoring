#ifndef DWT_h
#define DWT_h


#include "nrf.h"

#include "math.h"
#include "arm_math.h"

class wave_object{

public: 
    wave_object();

    int filtlength;

    int lpd_len;
    int hpd_len;
    int lpr_len;
    int hpr_len;

    const float32_t hpr[16] = {
      -1.174767841247695337306282316988909444086693950311503927620013e-04,
      -6.754494064505693663695475738792991218489630013558432103617077e-04,
      -3.917403733769470462980803573237762675229350073890493724492694e-04,
      4.870352993451574310422181557109824016634978512157003764736208e-03,
      8.746094047405776716382743246475640180402147081140676742686747e-03,
      -1.398102791739828164872293057263345144239559532934347169146368e-02,
      -4.408825393079475150676372323896350189751839190110996472750391e-02,
      1.736930100180754616961614886809598311413086529488394316977315e-02,
      1.287474266204784588570292875097083843022601575556488795577000e-01,
      -4.724845739132827703605900098258949861948011288770074644084096e-04,
      -2.840155429615469265162031323741647324684350124871451793599204e-01,
      1.582910525634930566738054787646630415774471154502826559735335e-02,
      5.853546836542067127712655200450981944303266678053369055707175e-01,
      -6.756307362972898068078007670471831499869115906336364227766759e-01,
      3.128715909142999706591623755057177219497319740370229185698712e-01,
      -5.441584224310400995500940520299935503599554294733050397729280e-02
    };

    const float32_t lpr[16] = {
      5.441584224310400995500940520299935503599554294733050397729280e-02,
      3.128715909142999706591623755057177219497319740370229185698712e-01,
      6.756307362972898068078007670471831499869115906336364227766759e-01,
      5.853546836542067127712655200450981944303266678053369055707175e-01,
      -1.582910525634930566738054787646630415774471154502826559735335e-02,
      -2.840155429615469265162031323741647324684350124871451793599204e-01,
      4.724845739132827703605900098258949861948011288770074644084096e-04,
      1.287474266204784588570292875097083843022601575556488795577000e-01,
      -1.736930100180754616961614886809598311413086529488394316977315e-02,
      -4.408825393079475150676372323896350189751839190110996472750391e-02,
      1.398102791739828164872293057263345144239559532934347169146368e-02,
      8.746094047405776716382743246475640180402147081140676742686747e-03,
      -4.870352993451574310422181557109824016634978512157003764736208e-03,
      -3.917403733769470462980803573237762675229350073890493724492694e-04,
      6.754494064505693663695475738792991218489630013558432103617077e-04,
      -1.174767841247695337306282316988909444086693950311503927620013e-04
      };


    const float32_t hpd[16] = {
      -5.441584224310400995500940520299935503599554294733050397729280e-02,
      3.128715909142999706591623755057177219497319740370229185698712e-01,
      -6.756307362972898068078007670471831499869115906336364227766759e-01,
      5.853546836542067127712655200450981944303266678053369055707175e-01,
      1.582910525634930566738054787646630415774471154502826559735335e-02,
      -2.840155429615469265162031323741647324684350124871451793599204e-01,
      -4.724845739132827703605900098258949861948011288770074644084096e-04,
      1.287474266204784588570292875097083843022601575556488795577000e-01,
      1.736930100180754616961614886809598311413086529488394316977315e-02,
      -4.408825393079475150676372323896350189751839190110996472750391e-02,
      -1.398102791739828164872293057263345144239559532934347169146368e-02,
      8.746094047405776716382743246475640180402147081140676742686747e-03,
      4.870352993451574310422181557109824016634978512157003764736208e-03,
      -3.917403733769470462980803573237762675229350073890493724492694e-04,
      -6.754494064505693663695475738792991218489630013558432103617077e-04,
      -1.174767841247695337306282316988909444086693950311503927620013e-04
    };


    const float32_t lpd[16] = {
      -1.174767841247695337306282316988909444086693950311503927620013e-04,
      6.754494064505693663695475738792991218489630013558432103617077e-04,
      -3.917403733769470462980803573237762675229350073890493724492694e-04,
      -4.870352993451574310422181557109824016634978512157003764736208e-03,
      8.746094047405776716382743246475640180402147081140676742686747e-03,
      1.398102791739828164872293057263345144239559532934347169146368e-02,
      -4.408825393079475150676372323896350189751839190110996472750391e-02,
      -1.736930100180754616961614886809598311413086529488394316977315e-02,
      1.287474266204784588570292875097083843022601575556488795577000e-01,
      4.724845739132827703605900098258949861948011288770074644084096e-04,
      -2.840155429615469265162031323741647324684350124871451793599204e-01,
      -1.582910525634930566738054787646630415774471154502826559735335e-02,
      5.853546836542067127712655200450981944303266678053369055707175e-01,
      6.756307362972898068078007670471831499869115906336364227766759e-01,
      3.128715909142999706591623755057177219497319740370229185698712e-01,
      5.441584224310400995500940520299935503599554294733050397729280e-02
    };
};

class wt_object{
    
public:      
    wt_object(wave_object *wave, uint32_t siglength, uint8_t J);
    wt_object() {}

    void dwt(const float32_t *inp);

    int outlength;
    float32_t *output;

private:
    wave_object *wave;
    int siglength;// Length of the original signal.
    int modwtsiglength; // Modified signal length for MODWT
    // Length of the output DWT vector
    int lenlength;// Length of the Output Dimension Vector "length"
    int J; // Number of decomposition Levels
    int MaxIter;// Maximum Iterations J <= MaxIter
    int even;// even = 1 if signal is of even length. even = 0 otherwise

    int N; //
    int cfftset;
    int zpad;
    int length[102];

    float32_t *params;

    void dwt1(float32_t *sig,int len_sig, float32_t *cA, float32_t *cD);

    int per_ext(float32_t *sig, int len, int a, float32_t *oup);

    int downsamp(float32_t *x, int lenx, int M, float32_t *y);


};

#endif